import { credentials } from './auth.js';
import { catastrophicErr, forbiddenError, unauthedError } from './messages.js';
import { StatusCodes } from 'http-status-codes';
import fetch from 'node-fetch';
const API_SERVER_URL = 'http://api.mechmania.io';
const headers = ({ name, password }) => ({
    'Content-Type': 'application/json',
    ...(name && password && {
        'Authorization': `Basic ${Buffer.from(`${name}:${password}`).toString('base64')}`
    })
});
export default async function apiRequest(method, route, body = undefined, customCredentials = credentials) {
    const req = (await fetch(API_SERVER_URL + route, {
        method,
        headers: headers(customCredentials),
        body: JSON.stringify(body)
    }).catch((reason) => {
        catastrophicErr(`Error during API request: ${reason}`);
    }));
    const text = await req.text();
    if (req.status === StatusCodes.UNAUTHORIZED)
        unauthedError(text);
    else if (req.status === StatusCodes.FORBIDDEN)
        forbiddenError(text);
    else if (!req.ok)
        catastrophicErr(`API request returned error w/ code ${req.status}: ${text}`);
    try {
        const parsedBody = JSON.parse(text);
        return {
            status: req.status,
            body: parsedBody
        };
    }
    catch {
        return catastrophicErr(`API server gave malformed response: ${text}`);
    }
}
//# sourceMappingURL=apiRequest.js.map